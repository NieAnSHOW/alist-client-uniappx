import { useInterceptor } from '@/uni_modules/kux-request';
import { RequestConfig } from '@/uni_modules/kux-request';
import { http } from './index';

const interceptors = useInterceptor();
interceptors
    .useRequestSync(async (options) : Promise<RequestConfig> => {
        console.log('同步请求拦截', options.url);
        // options.data = Object.assign(options.data ?? {}, {
        //  a: 2
        // })
        if (options.url == '/user/create') {
            console.log('中断请求', JSON.stringify(http));
            http.abort();
        }
        return options;
    })
    .useRequest((options) : RequestConfig => {
        console.log('请求拦截', options);
        options.data = Object.assign(options.data ?? {}, {
            a: 1
        })
        return options;
    })
    .useResponse((res) : any => {
        if (typeof res === 'object') {
            console.log('响应拦截', (res as UTSJSONObject).getAny('route'));
            // (res as UTSJSONObject).set('route', '/a/b/c');
        }

        if (typeof res === 'string') {
            res = '拦截成功了';
        }

        return res;
    })

export default interceptors;