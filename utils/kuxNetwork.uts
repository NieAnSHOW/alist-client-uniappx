import { useInterceptor, RequestConfig } from '@/uni_modules/kux-request';

const interceptor = useInterceptor();
interceptor
	.useRequestSync(async (options) : Promise<RequestConfig> => {
		console.log('同步请求拦截', options);
		options.data = {
			a: 2
		};
		return options;
	})
	.useRequest((options) : RequestConfig => {
		console.log('请求拦截', options);
		options.data = {
			a: 1
		}
		return options;
	})
	.useResponse((res) : any => {
		if (typeof res === 'object') {
			console.log('响应拦截', (res as UTSJSONObject).getAny('route'));
			res.set('route', '/a/b/c');
		}

		if (typeof res === 'string') {
			res = '拦截成功了';
		}

		return res;
	})
	.useResponseXhr((res : RequestSuccess<any>) : any => {
		console.log('原始响应拦截', res);
		if (typeof res.data === 'object') {
			const data = res.data as UTSJSONObject;
			console.log(data.getAny('data'));
		}
		return res;
	})

export default interceptor;